{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport TicTacToe from 'tictactoe-agent';\nimport Board from \"./Board\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { USER_FIGURE, AI_FIGURE, EMPTY, DRAW, VICTORY_CONDITIONS } from \"./constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Game = function (_Component) {\n  _inherits(Game, _Component);\n  var _super = _createSuper(Game);\n  function Game(props) {\n    var _this;\n    _classCallCheck(this, Game);\n    _this = _super.call(this, props);\n    _this._handlePress = function (index) {\n      _this._populateTile(index, USER_FIGURE, function () {\n        return _this._AIAct();\n      });\n    };\n    _this.state = {\n      board: [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY]\n    };\n    return _this;\n  }\n  _createClass(Game, [{\n    key: \"_populateTile\",\n    value: function _populateTile(index, figure) {\n      var _this2 = this;\n      var onFinish = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (f) {\n        return f;\n      };\n      if (this.state.board[index] !== EMPTY) {\n        return;\n      }\n      var board = _toConsumableArray(this.state.board);\n      board[index] = figure;\n      this.setState({\n        board: board\n      }, function () {\n        var result = _this2._judgeWinner();\n        if (result !== null) {\n          _this2.props.onFinish(result);\n        }\n        onFinish();\n      });\n    }\n  }, {\n    key: \"_AIAct\",\n    value: function _AIAct() {\n      var input = this.state.board.join('');\n      var model = new TicTacToe.Model(input, AI_FIGURE);\n      var recommendation = model.getRecommendation();\n      this._populateTile(recommendation.index, AI_FIGURE);\n    }\n  }, {\n    key: \"_judgeWinner\",\n    value: function _judgeWinner() {\n      var _this3 = this;\n      if (!this.state.board.some(function (figure) {\n        return figure === EMPTY;\n      })) {\n        return DRAW;\n      }\n      var winner = null;\n      var _loop = function _loop(i) {\n        var figure = _this3.state.board[VICTORY_CONDITIONS[i][0]];\n        if (VICTORY_CONDITIONS[i].every(function (tile) {\n          return _this3._checkTile(tile, figure);\n        })) {\n          winner = figure;\n          return \"break\";\n        }\n      };\n      for (var i = 0; i < VICTORY_CONDITIONS.length; ++i) {\n        var _ret = _loop(i);\n        if (_ret === \"break\") break;\n      }\n      return winner;\n    }\n  }, {\n    key: \"_checkTile\",\n    value: function _checkTile(tile, figure) {\n      return this.state.board[tile] === figure && this.state.board[tile] !== EMPTY;\n    }\n  }, {\n    key: \"_clearField\",\n    value: function _clearField() {\n      this.setState({\n        board: [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        children: _jsx(Board, {\n          board: this.state.board,\n          onPress: this._handlePress\n        })\n      });\n    }\n  }]);\n  return Game;\n}(Component);\nexport { Game as default };","map":{"version":3,"names":["React","Component","TicTacToe","Board","USER_FIGURE","AI_FIGURE","EMPTY","DRAW","VICTORY_CONDITIONS","Game","props","_handlePress","index","_populateTile","_AIAct","state","board","figure","onFinish","f","setState","result","_judgeWinner","input","join","model","Model","recommendation","getRecommendation","some","winner","i","every","tile","_checkTile","length"],"sources":["D:/szkolenia/ReactNativewPraktyce_12_14_12_2022/ReactNativeInPractice/5_1_Prezentacja_mozliwosci/1_tic_tac_toe/components/GameScreen/Game/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport TicTacToe from 'tictactoe-agent';\r\nimport Board from './Board';\r\nimport { View } from 'react-native';\r\nimport {\r\n  USER_FIGURE,\r\n  AI_FIGURE,\r\n  EMPTY,\r\n  DRAW,\r\n  VICTORY_CONDITIONS,\r\n} from './constants';\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      board: [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],\r\n    };\r\n  }\r\n\r\n  _populateTile(index, figure, onFinish = f => f) {\r\n    if (this.state.board[index] !== EMPTY) {\r\n      return;\r\n    }\r\n\r\n    const board = [...this.state.board];\r\n    board[index] = figure;\r\n\r\n    this.setState(\r\n      {\r\n        board,\r\n      },\r\n      () => {\r\n        const result = this._judgeWinner();\r\n\r\n        if (result !== null) {\r\n          this.props.onFinish(result);\r\n        }\r\n\r\n        onFinish();\r\n      },\r\n    );\r\n  }\r\n\r\n  _AIAct() {\r\n    const input = this.state.board.join('');\r\n    const model = new TicTacToe.Model(input, AI_FIGURE);\r\n    const recommendation = model.getRecommendation();\r\n\r\n    this._populateTile(recommendation.index, AI_FIGURE);\r\n  }\r\n\r\n  _judgeWinner() {\r\n    if (!this.state.board.some(figure => figure === EMPTY)) {\r\n      return DRAW;\r\n    }\r\n\r\n    let winner = null;\r\n    for (let i = 0; i < VICTORY_CONDITIONS.length; ++i) {\r\n      let figure = this.state.board[VICTORY_CONDITIONS[i][0]];\r\n\r\n      if (VICTORY_CONDITIONS[i].every(tile => this._checkTile(tile, figure))) {\r\n        winner = figure;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return winner;\r\n  }\r\n\r\n  _checkTile(tile, figure) {\r\n    return (\r\n      this.state.board[tile] === figure && this.state.board[tile] !== EMPTY\r\n    );\r\n  }\r\n\r\n  _clearField() {\r\n    this.setState({\r\n      board: [EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY],\r\n    });\r\n  }\r\n\r\n  _handlePress = index => {\r\n    this._populateTile(index, USER_FIGURE, () => this._AIAct());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Board board={this.state.board} onPress={this._handlePress} />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}